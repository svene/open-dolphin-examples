apply plugin: 'application'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'

mainClassName = 'org.group.ApplicationStarter'

logger.info "*** running on " + (runningOnJDK8() ? 'JDK 8' : 'JDK 7')

ext {
	jfxLibDir = locateJfxLibDir()
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    compile files("$jfxLibDir/jfxrt.jar") // TODO: find out why this seems to be necessary even on JDK 8
    compile project(':shared')
    compile 'org.svenehrke:javafx_extensions:0.1-SNAPSHOT'
    compile "org.open-dolphin:dolphin-client-javafx:$dolphinVersion"
    compile 'org.open-dolphin:od-example-pms-client:0.1-SNAPSHOT'
    compile 'org.open-dolphin-extension:javafxclient-extension:0.4-SNAPSHOT'
    compile 'org.open-dolphin-extension:client-extension:0.4-SNAPSHOT'
    compile "org.open-dolphin:dolphin-client:${dolphinVersion}"
}

boolean runningOnJDK8() {
    System.getProperty('java.version')[0..2].toDouble() == 1.8
}

String locateJfxLibDir() {
    def javaFxHome = System.env['JAVAFX_HOME'] ?: ''
    def javaHome = System.env['JAVA_HOME'] ?: ''
    def jdk7 = System.getProperty('java.version')[0..2].toDouble() == 1.7
    def jdk8 = runningOnJDK8()
    def jdkHome = System.properties.'java.home' ?: ''

    def result = "$javaFxHome/rt/lib"
    if (new File("$result/jfxrt.jar").exists()) {
        logger.info "using javafx from explicit JAVAFX_HOME: $result"
        return result
    }
    result = "$jdkHome/lib/"
    if (jdk7 && new File("$result/jfxrt.jar").exists()) {
        logger.info "using javafx from current java 7: $result"
        return result
    }
    result = "$jdkHome/lib/ext/"
    if (jdk8 && new File("$result/jfxrt.jar").exists()) {
        logger.info "using javafx from current java 8: $result"
        return result
    }
    result = "$javaHome/jre/lib/"
    if (new File("$result/jfxrt.jar").exists()) {
        logger.info "using javafx from explicit JAVA_HOME: $result"
        return result
    }
    result = "$javaHome/lib/"
    if (new File("$result/jfxrt.jar").exists()) {
        logger.info "using javafx from explicit JAVA_HOME: $result"
        return result
    }
    logger.error "please use a Java Version 7_06+"
    logger.error " or set JAVA_HOME   to a dir that contains the jre/lib/jfxrt.jar"
    logger.error " or set JAVAFX_HOME to a dir that contains the rt/lib/jfxrt.jar"
    throw new org.gradle.api.GradleScriptException("location of jfxrt.jar could not be determined")
}
